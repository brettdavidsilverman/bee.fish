Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 15.49      6.64     6.64 1333022807     0.00     0.01  BeeFishParser::UTF8Character::copy() const
 12.38     11.94     5.30 1407328497     0.00     0.00  frame_dummy
  9.15     15.86     3.92 1335051108     0.00     0.00  BeeFishParser::UTF8Character::~UTF8Character()
  8.11     19.33     3.48 275869109     0.01     0.03  BeeFishParser::Or::~Or()
  8.08     22.79     3.46 275869108     0.01     0.05  BeeFishParser::Or::copy() const
  6.34     25.51     2.72 89585129     0.03     0.04  BeeFishParser::And::~And()
  4.38     27.38     1.88 419545067     0.00     0.00  std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long)
  3.46     28.86     1.48 54494850     0.03     0.03  BeeFishParser::And::read(char)
  3.39     30.31     1.45 89585129     0.02     0.04  BeeFishParser::And::copy() const
  2.70     31.47     1.16 187959562     0.01     0.01  BeeFishParser::Repeat::copy() const
  2.53     32.55     1.09 200129308     0.01     0.01  BeeFishParser::Repeat::~Repeat()
  2.48     33.61     1.06 25015589     0.04     0.43  BeeFishParser::And::~And()
  2.14     34.53     0.92 148404841     0.01     0.01  BeeFishParser::Optional::copy() const
  2.02     35.39     0.87 153137523     0.01     0.01  BeeFishParser::Optional::~Optional()
  1.96     36.23     0.84                             BeeFishParser::Capture::read(char)
  1.80     37.00     0.77 28734130     0.03     0.03  BeeFishParser::LoadOnDemand::copy() const
  1.44     37.62     0.62 27354835     0.02     0.03  BeeFishParser::Or::read(char)
  1.33     38.19     0.57 39891991     0.01     0.01  BeeFishParser::Not::~Not()
  0.93     38.59     0.40 18912344     0.02     1.75  BeeFishParser::Repeat::read(char)
  0.93     38.99     0.40 28734130     0.01     0.02  BeeFishParser::LoadOnDemand::~LoadOnDemand()
  0.77     39.32     0.33  2028290     0.16     7.33  BeeFishParser::NumberExample()
  0.74     39.63     0.32 39891991     0.01     0.01  BeeFishParser::Not::copy() const
  0.72     39.94     0.31 20959007     0.01     0.04  BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&)
  0.61     40.20     0.26   676097     0.38     0.43  BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&)
  0.49     40.41     0.21 14896507     0.01     0.35  BeeFishParser::LoadOnDemand::read(char)
  0.48     40.62     0.21 17002532     0.01     0.01  BeeFishParser::Optional::read(char)
  0.47     40.82     0.20 14896507     0.01     0.01  BeeFishJSON::JSON::read(char)
  0.41     40.99     0.18                             BeeFishParser::Or::~Or()
  0.36     41.15     0.16 25912840     0.01     0.01  BeeFishParser::UTF8Character::read(char)
  0.35     41.30     0.15                             BeeFishScript::Variable::operator==(char const*) const
  0.35     41.45     0.15                             BeeFishScript::Variable::operator==(BeeFishScript::Variable const&) const
  0.33     41.59     0.14 10587685     0.01     0.02  BeeFishParser::Range::copy() const
  0.30     41.72     0.13  4732679     0.03     0.23  BeeFishParser::ArrayParser::~ArrayParser()
  0.30     41.85     0.13 43750719     0.00     0.00  BeeFishParser::Parser::setResult(std::optional<bool>)
  0.28     41.97     0.12 18930718     0.01     0.01  BeeFishParser::Word::~Word()
  0.26     42.08     0.11 63553138     0.00     0.00  std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.22     42.17     0.10 16226328     0.01     0.01  BeeFishParser::Word::copy() const
  0.21     42.26     0.09  5091347     0.02     0.02  BeeFishJSON::Object::read(char)
  0.19     42.34     0.08 10587686     0.01     0.01  BeeFishParser::Range::~Range()
  0.15     42.41     0.07                             BeeFishParser::Capture::~Capture()
  0.14     42.47     0.06  2570515     0.02     0.02  BeeFishParser::Parser::isOptional() const
  0.11     42.51     0.05 10536148     0.00     0.01  BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.11     42.56     0.05  2705129     0.02     0.02  BeeFishParser::Not::read(char)
  0.08     42.59     0.04  1774471     0.02     0.02  BeeFishParser::Word::read(char)
  0.07     42.62     0.03  6760970     0.00     0.01  BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&)
  0.07     42.65     0.03  1352194     0.02     0.03  BeeFishJSON::Object::~Object()
  0.07     42.68     0.03   338048     0.09    14.97  BeeFishJSON::_JSON(BeeFishParser::Parser*)
  0.07     42.71     0.03                             BeeFishParser::Range::~Range()
  0.05     42.73     0.02 10536148     0.00     0.00  BeeFishParser::UTF8Character::~UTF8Character()
  0.05     42.75     0.02                             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&)
  0.05     42.77     0.02                             std::_Sp_counted_ptr<BeeFishScript::Object*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.02     42.78     0.01  2704388     0.00     0.00  BeeFishParser::operator-(BeeFishParser::Parser const&)
  0.02     42.79     0.01  2028291     0.00     0.13  BeeFishParser::Repeat::~Repeat()
  0.02     42.80     0.01  1352194     0.01     0.01  BeeFishJSON::Object::copy() const
  0.02     42.81     0.01   338048     0.03     0.03  BeeFishJSON::JSON::~JSON()
  0.01     42.82     0.01  1976765     0.00     0.01  BeeFishParser::UTF8Character::read(BeeFishParser::UTF8Character const&)
  0.01     42.82     0.01   446219     0.01     0.01  BeeFishParser::Range::read(BeeFishParser::UTF8Character const&)
  0.01     42.83     0.01                             BeeFishScript::Variable::operator=(BeeFishScript::Variable const&)
  0.01     42.83     0.01                             BeeFishParser::Parser::value[abi:cxx11]() const
  0.00     42.83     0.00  1337543     0.00     0.00  BeeFishParser::Optional::isOptional() const
  0.00     42.83     0.00   338048     0.00     0.00  std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_invoke(std::_Any_data const&, BeeFishParser::Parser*&&)
  0.00     42.83     0.00   322633     0.00     0.00  BeeFishParser::Repeat::isOptional() const
  0.00     42.83     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11BeeFishMisc7openLogEv
  0.00     42.83     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int) [clone .constprop.0]

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.02% of 42.83 seconds

index % time    self  children    called     name
[2]     86.8    7.98   29.22 5083130+767727962 <cycle 1 as a whole> [2]
                0.33   14.54 2028290+676097      BeeFishParser::NumberExample() <cycle 1> [4]
                3.46   11.40 275869108             BeeFishParser::Or::copy() const <cycle 1> [5]
                1.45    2.35 89585129+30427411     BeeFishParser::And::copy() const <cycle 1> [14]
                1.16    0.21 187959562             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                0.92    0.13 148404841             BeeFishParser::Optional::copy() const <cycle 1> [21]
                0.31    0.53 20959007             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                0.32    0.00 39891991             BeeFishParser::Not::copy() const <cycle 1> [29]
                0.03    0.05 6760970             BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                0.01    0.00 1352194             BeeFishJSON::Object::copy() const <cycle 1> [59]
-----------------------------------------------
                             1363849             BeeFishParser::Optional::read(char) <cycle 3> [34]
                             17548495             BeeFishParser::And::read(char) <cycle 3> [17]
[3]     77.3    0.40   32.70 18912344         BeeFishParser::Repeat::read(char) <cycle 3> [3]
                6.38   23.39 4068978/5083130     BeeFishParser::Or::copy() const <cycle 1> [5]
                0.53    1.94  338048/5083130     BeeFishParser::And::copy() const <cycle 1> [14]
                0.25    0.11 2903982/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
                0.03    0.01  317277/106664136     BeeFishParser::And::~And() <cycle 2> [15]
                0.04    0.00 1523816/2570515     BeeFishParser::Parser::isOptional() const [48]
                0.01    0.00  446219/10587685     BeeFishParser::Range::copy() const [33]
                0.00    0.00  446219/25912840     BeeFishParser::UTF8Character::read(char) [31]
                0.00    0.00 1523743/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                0.00    0.00  108170/10587686     BeeFishParser::Range::~Range() [46]
                             14171210             BeeFishParser::And::read(char) <cycle 3> [17]
                             4311292             BeeFishParser::Or::read(char) <cycle 3> [22]
-----------------------------------------------
                              676097             BeeFishParser::NumberExample() <cycle 1> [4]
                             1352194             BeeFishJSON::Object::copy() const <cycle 1> [59]
                1.06    3.89  676096/5083130     BeeFishJSON::_JSON(BeeFishParser::Parser*) [12]
[4]     34.7    0.33   14.54 2028290+676097  BeeFishParser::NumberExample() <cycle 1> [4]
                1.06    9.82 25015589/25015589     BeeFishParser::And::~And() [8]
                1.04    0.46 12169746/106664136     BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                0.13    0.94 4732679/4732679     BeeFishParser::ArrayParser::~ArrayParser() [20]
                0.26    0.03  676097/676097      BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&) [30]
                0.01    0.25 2028291/2028291     BeeFishParser::Repeat::~Repeat() [32]
                0.17    0.08 2028291/106664136     BeeFishParser::And::~And() <cycle 2> [15]
                0.06    0.03  676097/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
                0.07    0.00 17578522/1407328497     frame_dummy [10]
                0.03    0.03 8113164/10536148     BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [44]
                0.02    0.02 4056582/1333022807     BeeFishParser::UTF8Character::copy() const [7]
                0.02    0.00 8113164/10536148     BeeFishParser::UTF8Character::~UTF8Character() [55]
                0.01    0.00 6084873/63553138     std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [42]
                0.01    0.00 2704388/2704388     BeeFishParser::operator-(BeeFishParser::Parser const&) [58]
                0.01    0.00 2028291/419545067     std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
                             20959007             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                             12845843             BeeFishParser::Or::copy() const <cycle 1> [5]
                             6760970             BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                             4056582             BeeFishParser::And::copy() const <cycle 1> [14]
                             2028291             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                              676097             BeeFishParser::NumberExample() <cycle 1> [4]
-----------------------------------------------
                                   1             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                             1352196             BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                             6760976             BeeFishParser::Optional::copy() const <cycle 1> [21]
                             12845843             BeeFishParser::NumberExample() <cycle 1> [4]
                             39891991             BeeFishParser::Not::copy() const <cycle 1> [29]
                             43272478             BeeFishParser::And::copy() const <cycle 1> [14]
                             167676641             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                0.00    0.00       1/5083130     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
                0.00    0.00       3/5083130     BeeFishParser::Repeat::Repeat(BeeFishParser::Parser const&, unsigned long, unsigned long) [63]
                6.38   23.39 4068978/5083130     BeeFishParser::Repeat::read(char) <cycle 3> [3]
[5]     34.7    3.46   11.40 275869108         BeeFishParser::Or::copy() const <cycle 1> [5]
                5.78    4.37 1160273110/1333022807     BeeFishParser::UTF8Character::copy() const [7]
                1.23    0.00 275869111/419545067     std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
                0.02    0.01 2704388/16226328     BeeFishParser::Word::copy() const [37]
                             41920281             BeeFishParser::And::copy() const <cycle 1> [14]
                             39891990             BeeFishParser::Not::copy() const <cycle 1> [29]
                              676097             BeeFishJSON::Object::copy() const <cycle 1> [59]
-----------------------------------------------
[6]     30.7    9.15    4.00 106664136+682373296 <cycle 2 as a whole> [6]
                3.48    3.42 275869109             BeeFishParser::Or::~Or() <cycle 2> [9]
                2.72    0.44 89585129+30427411     BeeFishParser::And::~And() <cycle 2> [15]
                1.09    0.08 200129308             BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                0.87    0.00 153137523             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                0.57    0.00 39891991             BeeFishParser::Not::~Not() <cycle 2> [27]
                0.40    0.05 28734130             BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
                0.03    0.01 1352194             BeeFishJSON::Object::~Object() <cycle 2> [51]
                0.01    0.00  338048             BeeFishJSON::JSON::~JSON() <cycle 2> [57]
-----------------------------------------------
                0.01    0.01 2028298/1333022807     BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                0.02    0.02 4056582/1333022807     BeeFishParser::NumberExample() <cycle 1> [4]
                0.09    0.07 18254682/1333022807     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                0.74    0.56 148410135/1333022807     BeeFishParser::And::copy() const <cycle 1> [14]
                5.78    4.37 1160273110/1333022807     BeeFishParser::Or::copy() const <cycle 1> [5]
[7]     27.2    6.64    5.02 1333022807         BeeFishParser::UTF8Character::copy() const [7]
                5.02    0.00 1333022807/1407328497     frame_dummy [10]
-----------------------------------------------
                1.06    9.82 25015589/25015589     BeeFishParser::NumberExample() <cycle 1> [4]
[8]     25.4    1.06    9.82 25015589         BeeFishParser::And::~And() [8]
                4.52    1.98 52735582/106664136     BeeFishParser::Optional::~Optional() <cycle 2> [23]
                1.39    0.61 16226330/106664136     BeeFishParser::And::~And() <cycle 2> [15]
                0.52    0.23 6084873/106664136     BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
                0.35    0.15 4056590/106664136     BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                0.07    0.00 23663406/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                0.00    0.00       4/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
-----------------------------------------------
                              338048             BeeFishJSON::JSON::~JSON() <cycle 2> [57]
                             7437074             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                             39891991             BeeFishParser::Not::~Not() <cycle 2> [27]
                             43272478             BeeFishParser::And::~And() <cycle 2> [15]
                             181011383             BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                0.00    0.00       1/106664136     BeeFishParser::Not::~Not() [64]
                0.00    0.00       3/106664136     BeeFishParser::Repeat::~Repeat() [32]
                0.00    0.00       4/106664136     BeeFishParser::And::~And() [8]
                0.03    0.01  338048/106664136     BeeFishJSON::_JSON(BeeFishParser::Parser*) [12]
                0.06    0.03  676097/106664136     BeeFishParser::NumberExample() <cycle 1> [4]
                0.25    0.11 2903982/106664136     BeeFishParser::Repeat::read(char) <cycle 3> [3]
[9]     16.1    3.48    3.42 275869109         BeeFishParser::Or::~Or() <cycle 2> [9]
                3.41    0.00 1160273110/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                0.02    0.00 2704388/18930718     BeeFishParser::Word::~Word() [41]
                             41920281             BeeFishParser::And::~And() <cycle 2> [15]
                             39891990             BeeFishParser::Not::~Not() <cycle 2> [27]
                              676097             BeeFishJSON::Object::~Object() <cycle 2> [51]
-----------------------------------------------
                0.00    0.00       2/1407328497     BeeFishParser::Word::Word(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.00    0.00       2/1407328497     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
                0.00    0.00       4/1407328497     BeeFishParser::Range::Range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [65]
                0.03    0.00 8789284/1407328497     BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                0.04    0.00 10536176/1407328497     BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [44]
                0.06    0.00 16226328/1407328497     BeeFishParser::Word::copy() const [37]
                0.07    0.00 17578522/1407328497     BeeFishParser::NumberExample() <cycle 1> [4]
                0.08    0.00 21175372/1407328497     BeeFishParser::Range::copy() const [33]
                5.02    0.00 1333022807/1407328497     BeeFishParser::UTF8Character::copy() const [7]
[10]    12.4    5.30    0.00 1407328497         frame_dummy [10]
-----------------------------------------------
                             4712490             BeeFishParser::And::read(char) <cycle 3> [17]
                             10184017             BeeFishParser::Optional::read(char) <cycle 3> [34]
[11]    12.3    0.21    5.06 14896507         BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
                0.03    5.03  338048/338048      BeeFishJSON::_JSON(BeeFishParser::Parser*) [12]
                0.00    0.00  338048/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                0.00    0.00  338048/338048      std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_invoke(std::_Any_data const&, BeeFishParser::Parser*&&) [76]
                             14896507             BeeFishJSON::JSON::read(char) <cycle 3> [35]
-----------------------------------------------
                0.03    5.03  338048/338048      BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
[12]    11.8    0.03    5.03  338048         BeeFishJSON::_JSON(BeeFishParser::Parser*) [12]
                1.06    3.89  676096/5083130     BeeFishParser::NumberExample() <cycle 1> [4]
                0.03    0.01  338048/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
                0.03    0.01  338048/106664136     BeeFishParser::Optional::~Optional() <cycle 2> [23]
-----------------------------------------------
                0.00    0.00       8/1335051108     BeeFishParser::Or::~Or() [36]
                0.00    0.00      61/1335051108     BeeFishParser::ArrayParser::~ArrayParser() [20]
                0.01    0.00 2704388/1335051108     BeeFishJSON::Object::~Object() <cycle 2> [51]
                0.07    0.00 23663406/1335051108     BeeFishParser::And::~And() [8]
                0.44    0.00 148410135/1335051108     BeeFishParser::And::~And() <cycle 2> [15]
                3.41    0.00 1160273110/1335051108     BeeFishParser::Or::~Or() <cycle 2> [9]
[13]     9.2    3.92    0.00 1335051108         BeeFishParser::UTF8Character::~UTF8Character() [13]
-----------------------------------------------
                             30427411             BeeFishParser::And::copy() const <cycle 1> [14]
                             4056582             BeeFishParser::NumberExample() <cycle 1> [4]
                             4056583             BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                             10141458             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                             10817555             BeeFishParser::Optional::copy() const <cycle 1> [21]
                             18254620             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                             41920281             BeeFishParser::Or::copy() const <cycle 1> [5]
                0.00    0.00       1/5083130     BeeFishParser::Repeat::Repeat(BeeFishParser::Parser const&, unsigned long, unsigned long) [63]
                0.00    0.00       1/5083130     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
                0.53    1.94  338048/5083130     BeeFishParser::Repeat::read(char) <cycle 3> [3]
[14]     8.9    1.45    2.35 89585129+30427411 BeeFishParser::And::copy() const <cycle 1> [14]
                0.74    0.56 148410135/1333022807     BeeFishParser::UTF8Character::copy() const [7]
                0.54    0.00 120012542/419545067     std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
                0.49    0.03 18256142/28734130     BeeFishParser::LoadOnDemand::copy() const [26]
                             95669263             BeeFishParser::Optional::copy() const <cycle 1> [21]
                             53413193             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                             43272478             BeeFishParser::Or::copy() const <cycle 1> [5]
                             30427411             BeeFishParser::And::copy() const <cycle 1> [14]
-----------------------------------------------
                             30427411             BeeFishParser::And::~And() <cycle 2> [15]
                             10162229             BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                             10817555             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                             41920281             BeeFishParser::Or::~Or() <cycle 2> [9]
                0.03    0.01  317277/106664136     BeeFishParser::Repeat::read(char) <cycle 3> [3]
                0.17    0.08 2028291/106664136     BeeFishParser::NumberExample() <cycle 1> [4]
                0.17    0.08 2028292/106664136     BeeFishParser::Repeat::~Repeat() [32]
                0.52    0.23 6084874/106664136     BeeFishParser::ArrayParser::~ArrayParser() [20]
                1.39    0.61 16226330/106664136     BeeFishParser::And::~And() [8]
[15]     7.4    2.72    0.44 89585129+30427411 BeeFishParser::And::~And() <cycle 2> [15]
                0.44    0.00 148410135/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                             95669263             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                             53413193             BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                             43272478             BeeFishParser::Or::~Or() <cycle 2> [9]
                             18256142             BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
                             30427411             BeeFishParser::And::~And() <cycle 2> [15]
-----------------------------------------------
                0.00    0.00  676097/419545067     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&) [30]
                0.01    0.00 2028291/419545067     BeeFishParser::NumberExample() <cycle 1> [4]
                0.09    0.00 20959026/419545067     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                0.54    0.00 120012542/419545067     BeeFishParser::And::copy() const <cycle 1> [14]
                1.23    0.00 275869111/419545067     BeeFishParser::Or::copy() const <cycle 1> [5]
[16]     4.4    1.88    0.00 419545067         std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
-----------------------------------------------
                             15486837             BeeFishParser::And::read(char) <cycle 3> [17]
                             4778568             BeeFishParser::Optional::read(char) <cycle 3> [34]
                             5091347             BeeFishJSON::Object::read(char) <cycle 3> [43]
                             14171210             BeeFishParser::Repeat::read(char) <cycle 3> [3]
                             14896507             BeeFishJSON::JSON::read(char) <cycle 3> [35]
                             15557218             BeeFishParser::Or::read(char) <cycle 3> [22]
[17]     3.6    1.48    0.05 54494850+15486837 BeeFishParser::And::read(char) <cycle 3> [17]
                0.02    0.00 1046699/2570515     BeeFishParser::Parser::isOptional() const [48]
                0.01    0.01 1969021/25912840     BeeFishParser::UTF8Character::read(char) [31]
                0.01    0.00 2492595/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                0.00    0.00 1337543/1337543     BeeFishParser::Optional::isOptional() const [75]
                0.00    0.00  322633/322633      BeeFishParser::Repeat::isOptional() const [77]
                             19662316             BeeFishParser::Or::read(char) <cycle 3> [22]
                             17548495             BeeFishParser::Repeat::read(char) <cycle 3> [3]
                             17002532             BeeFishParser::Optional::read(char) <cycle 3> [34]
                             4712490             BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
                             15486837             BeeFishParser::And::read(char) <cycle 3> [17]
-----------------------------------------------
                             2028291             BeeFishParser::NumberExample() <cycle 1> [4]
                             2028295             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                             4056587             BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                             53413193             BeeFishParser::And::copy() const <cycle 1> [14]
                             126433196             BeeFishParser::Optional::copy() const <cycle 1> [21]
[18]     3.2    1.16    0.21 187959562         BeeFishParser::Repeat::copy() const <cycle 1> [18]
                0.13    0.08 10141465/10587685     BeeFishParser::Range::copy() const [33]
                             167676641             BeeFishParser::Or::copy() const <cycle 1> [5]
                             10141458             BeeFishParser::And::copy() const <cycle 1> [14]
-----------------------------------------------
                             53413193             BeeFishParser::And::~And() <cycle 2> [15]
                             130489779             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                0.35    0.15 4056590/106664136     BeeFishParser::And::~And() [8]
                1.04    0.46 12169746/106664136     BeeFishParser::NumberExample() <cycle 1> [4]
[19]     2.7    1.09    0.08 200129308         BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                0.08    0.00 10479514/10587686     BeeFishParser::Range::~Range() [46]
                             181011383             BeeFishParser::Or::~Or() <cycle 2> [9]
                             10162229             BeeFishParser::And::~And() <cycle 2> [15]
-----------------------------------------------
                0.13    0.94 4732679/4732679     BeeFishParser::NumberExample() <cycle 1> [4]
[20]     2.5    0.13    0.94 4732679         BeeFishParser::ArrayParser::~ArrayParser() [20]
                0.52    0.23 6084874/106664136     BeeFishParser::And::~And() <cycle 2> [15]
                0.10    0.00 16226328/18930718     BeeFishParser::Word::~Word() [41]
                0.06    0.03  676097/106664136     BeeFishJSON::Object::~Object() <cycle 2> [51]
                0.00    0.00      61/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                0.00    0.00       1/106664136     BeeFishParser::Not::~Not() <cycle 2> [27]
-----------------------------------------------
                             52735577             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                             95669263             BeeFishParser::And::copy() const <cycle 1> [14]
                0.00    0.00       1/5083130     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
[21]     2.4    0.92    0.13 148404841         BeeFishParser::Optional::copy() const <cycle 1> [21]
                0.12    0.01 4393114/28734130     BeeFishParser::LoadOnDemand::copy() const [26]
                             126433196             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                             10817555             BeeFishParser::And::copy() const <cycle 1> [14]
                             6760976             BeeFishParser::Or::copy() const <cycle 1> [5]
-----------------------------------------------
                              676098             BeeFishParser::Optional::read(char) <cycle 3> [34]
                             2705129             BeeFishParser::Not::read(char) <cycle 3> [49]
                             4311292             BeeFishParser::Repeat::read(char) <cycle 3> [3]
                             19662316             BeeFishParser::And::read(char) <cycle 3> [17]
[22]     2.1    0.62    0.30 27354835         BeeFishParser::Or::read(char) <cycle 3> [22]
                0.14    0.10 23497600/25912840     BeeFishParser::UTF8Character::read(char) [31]
                0.04    0.00 1774471/1774471     BeeFishParser::Word::read(char) [50]
                0.02    0.00 8046057/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                             15557218             BeeFishParser::And::read(char) <cycle 3> [17]
                             5091347             BeeFishJSON::Object::read(char) <cycle 3> [43]
                             2705129             BeeFishParser::Not::read(char) <cycle 3> [49]
-----------------------------------------------
                              338048             BeeFishJSON::JSON::~JSON() <cycle 2> [57]
                             4056582             BeeFishJSON::Object::~Object() <cycle 2> [51]
                             95669263             BeeFishParser::And::~And() <cycle 2> [15]
                0.03    0.01  338048/106664136     BeeFishJSON::_JSON(BeeFishParser::Parser*) [12]
                4.52    1.98 52735582/106664136     BeeFishParser::And::~And() [8]
[23]     2.0    0.87    0.00 153137523         BeeFishParser::Optional::~Optional() <cycle 2> [23]
                             130489779             BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
                             10817555             BeeFishParser::And::~And() <cycle 2> [15]
                             7437074             BeeFishParser::Or::~Or() <cycle 2> [9]
                             4393115             BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
-----------------------------------------------
                             20959007             BeeFishParser::NumberExample() <cycle 1> [4]
[24]     2.0    0.31    0.53 20959007         BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                0.16    0.01 6084873/28734130     BeeFishParser::LoadOnDemand::copy() const [26]
                0.09    0.07 18254682/1333022807     BeeFishParser::UTF8Character::copy() const [7]
                0.06    0.04 10817552/16226328     BeeFishParser::Word::copy() const [37]
                0.09    0.00 20959026/419545067     std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
                             52735577             BeeFishParser::Optional::copy() const <cycle 1> [21]
                             18254620             BeeFishParser::And::copy() const <cycle 1> [14]
                             2028295             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                              676097             BeeFishJSON::Object::copy() const <cycle 1> [59]
                                   1             BeeFishParser::Or::copy() const <cycle 1> [5]
-----------------------------------------------
                                                 <spontaneous>
[25]     2.0    0.84    0.00                 BeeFishParser::Capture::read(char) [25]
-----------------------------------------------
                0.00    0.00       1/28734130     BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                0.12    0.01 4393114/28734130     BeeFishParser::Optional::copy() const <cycle 1> [21]
                0.16    0.01 6084873/28734130     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
                0.49    0.03 18256142/28734130     BeeFishParser::And::copy() const <cycle 1> [14]
[26]     1.9    0.77    0.05 28734130         BeeFishParser::LoadOnDemand::copy() const [26]
                0.05    0.00 28734132/63553138     std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [42]
-----------------------------------------------
                             39891990             BeeFishParser::Or::~Or() <cycle 2> [9]
                0.00    0.00       1/106664136     BeeFishParser::ArrayParser::~ArrayParser() [20]
[27]     1.3    0.57    0.00 39891991         BeeFishParser::Not::~Not() <cycle 2> [27]
                             39891991             BeeFishParser::Or::~Or() <cycle 2> [9]
-----------------------------------------------
                             4393115             BeeFishParser::Optional::~Optional() <cycle 2> [23]
                             18256142             BeeFishParser::And::~And() <cycle 2> [15]
                0.52    0.23 6084873/106664136     BeeFishParser::And::~And() [8]
[28]     1.1    0.40    0.05 28734130         BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
                0.05    0.00 28734132/63553138     std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [42]
                              338048             BeeFishJSON::JSON::~JSON() <cycle 2> [57]
-----------------------------------------------
                             39891990             BeeFishParser::Or::copy() const <cycle 1> [5]
                0.00    0.00       1/5083130     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
[29]     0.7    0.32    0.00 39891991         BeeFishParser::Not::copy() const <cycle 1> [29]
                             39891991             BeeFishParser::Or::copy() const <cycle 1> [5]
-----------------------------------------------
                0.26    0.03  676097/676097      BeeFishParser::NumberExample() <cycle 1> [4]
[30]     0.7    0.26    0.03  676097         BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&) [30]
                0.02    0.01 2704388/16226328     BeeFishParser::Word::copy() const [37]
                0.00    0.00  676097/419545067     std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long) [16]
-----------------------------------------------
                0.00    0.00  446219/25912840     BeeFishParser::Repeat::read(char) <cycle 3> [3]
                0.01    0.01 1969021/25912840     BeeFishParser::And::read(char) <cycle 3> [17]
                0.14    0.10 23497600/25912840     BeeFishParser::Or::read(char) <cycle 3> [22]
[31]     0.6    0.16    0.11 25912840         BeeFishParser::UTF8Character::read(char) [31]
                0.07    0.00 23489856/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                0.01    0.01 2422984/10536148     BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [44]
                0.01    0.01 1976765/1976765     BeeFishParser::UTF8Character::read(BeeFishParser::UTF8Character const&) [56]
                0.01    0.00  446219/446219      BeeFishParser::Range::read(BeeFishParser::UTF8Character const&) [60]
                0.00    0.00 2422984/10536148     BeeFishParser::UTF8Character::~UTF8Character() [55]
-----------------------------------------------
                0.01    0.25 2028291/2028291     BeeFishParser::NumberExample() <cycle 1> [4]
[32]     0.6    0.01    0.25 2028291         BeeFishParser::Repeat::~Repeat() [32]
                0.17    0.08 2028292/106664136     BeeFishParser::And::~And() <cycle 2> [15]
                0.00    0.00       3/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
                0.00    0.00       2/10587686     BeeFishParser::Range::~Range() [46]
-----------------------------------------------
                0.00    0.00       1/10587685     BeeFishParser::Repeat::Repeat(BeeFishParser::Parser const&, unsigned long, unsigned long) [63]
                0.01    0.00  446219/10587685     BeeFishParser::Repeat::read(char) <cycle 3> [3]
                0.13    0.08 10141465/10587685     BeeFishParser::Repeat::copy() const <cycle 1> [18]
[33]     0.5    0.14    0.08 10587685         BeeFishParser::Range::copy() const [33]
                0.08    0.00 21175372/1407328497     frame_dummy [10]
-----------------------------------------------
                             17002532             BeeFishParser::And::read(char) <cycle 3> [17]
[34]     0.5    0.21    0.00 17002532         BeeFishParser::Optional::read(char) <cycle 3> [34]
                0.00    0.00  704014/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                             10184017             BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
                             4778568             BeeFishParser::And::read(char) <cycle 3> [17]
                             1363849             BeeFishParser::Repeat::read(char) <cycle 3> [3]
                              676098             BeeFishParser::Or::read(char) <cycle 3> [22]
-----------------------------------------------
                             14896507             BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
[35]     0.5    0.20    0.00 14896507         BeeFishJSON::JSON::read(char) <cycle 3> [35]
                0.00    0.00  338048/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                             14896507             BeeFishParser::And::read(char) <cycle 3> [17]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.4    0.18    0.00                 BeeFishParser::Or::~Or() [36]
                0.00    0.00       8/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                0.00    0.00       2/18930718     BeeFishParser::Word::~Word() [41]
-----------------------------------------------
                0.02    0.01 2704388/16226328     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&) [30]
                0.02    0.01 2704388/16226328     BeeFishParser::Or::copy() const <cycle 1> [5]
                0.06    0.04 10817552/16226328     BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
[37]     0.4    0.10    0.06 16226328         BeeFishParser::Word::copy() const [37]
                0.06    0.00 16226328/1407328497     frame_dummy [10]
-----------------------------------------------
                                                 <spontaneous>
[38]     0.4    0.15    0.00                 BeeFishScript::Variable::operator==(char const*) const [38]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.4    0.15    0.00                 BeeFishScript::Variable::operator==(BeeFishScript::Variable const&) const [39]
-----------------------------------------------
                0.00    0.00  338048/43750719     BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
                0.00    0.00  338048/43750719     BeeFishJSON::JSON::read(char) <cycle 3> [35]
                0.00    0.00  338049/43750719     BeeFishJSON::Object::read(char) <cycle 3> [43]
                0.00    0.00  446219/43750719     BeeFishParser::Range::read(BeeFishParser::UTF8Character const&) [60]
                0.00    0.00  704014/43750719     BeeFishParser::Optional::read(char) <cycle 3> [34]
                0.00    0.00 1352196/43750719     BeeFishParser::Word::read(char) [50]
                0.00    0.00 1523743/43750719     BeeFishParser::Repeat::read(char) <cycle 3> [3]
                0.01    0.00 1976765/43750719     BeeFishParser::UTF8Character::read(BeeFishParser::UTF8Character const&) [56]
                0.01    0.00 2492595/43750719     BeeFishParser::And::read(char) <cycle 3> [17]
                0.01    0.00 2705129/43750719     BeeFishParser::Not::read(char) <cycle 3> [49]
                0.02    0.00 8046057/43750719     BeeFishParser::Or::read(char) <cycle 3> [22]
                0.07    0.00 23489856/43750719     BeeFishParser::UTF8Character::read(char) [31]
[40]     0.3    0.13    0.00 43750719         BeeFishParser::Parser::setResult(std::optional<bool>) [40]
-----------------------------------------------
                0.00    0.00       2/18930718     BeeFishParser::Or::~Or() [36]
                0.02    0.00 2704388/18930718     BeeFishParser::Or::~Or() <cycle 2> [9]
                0.10    0.00 16226328/18930718     BeeFishParser::ArrayParser::~ArrayParser() [20]
[41]     0.3    0.12    0.00 18930718         BeeFishParser::Word::~Word() [41]
-----------------------------------------------
                0.00    0.00       1/63553138     BeeFishParser::LoadOnDemand::~LoadOnDemand() [67]
                0.01    0.00 6084873/63553138     BeeFishParser::NumberExample() <cycle 1> [4]
                0.05    0.00 28734132/63553138     BeeFishParser::LoadOnDemand::copy() const [26]
                0.05    0.00 28734132/63553138     BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
[42]     0.3    0.11    0.00 63553138         std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [42]
-----------------------------------------------
                             5091347             BeeFishParser::Or::read(char) <cycle 3> [22]
[43]     0.2    0.09    0.00 5091347         BeeFishJSON::Object::read(char) <cycle 3> [43]
                0.00    0.00  338049/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                             5091347             BeeFishParser::And::read(char) <cycle 3> [17]
-----------------------------------------------
                0.01    0.01 2422984/10536148     BeeFishParser::UTF8Character::read(char) [31]
                0.03    0.03 8113164/10536148     BeeFishParser::NumberExample() <cycle 1> [4]
[44]     0.2    0.05    0.04 10536148         BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [44]
                0.04    0.00 10536176/1407328497     frame_dummy [10]
-----------------------------------------------
                             6760970             BeeFishParser::NumberExample() <cycle 1> [4]
[45]     0.2    0.03    0.05 6760970         BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) <cycle 1> [45]
                0.03    0.00 8789284/1407328497     frame_dummy [10]
                0.01    0.01 2028298/1333022807     BeeFishParser::UTF8Character::copy() const [7]
                0.00    0.00       1/28734130     BeeFishParser::LoadOnDemand::copy() const [26]
                             4056587             BeeFishParser::Repeat::copy() const <cycle 1> [18]
                             4056583             BeeFishParser::And::copy() const <cycle 1> [14]
                             1352196             BeeFishParser::Or::copy() const <cycle 1> [5]
-----------------------------------------------
                0.00    0.00       2/10587686     BeeFishParser::Repeat::~Repeat() [32]
                0.00    0.00  108170/10587686     BeeFishParser::Repeat::read(char) <cycle 3> [3]
                0.08    0.00 10479514/10587686     BeeFishParser::Repeat::~Repeat() <cycle 2> [19]
[46]     0.2    0.08    0.00 10587686         BeeFishParser::Range::~Range() [46]
-----------------------------------------------
                                                 <spontaneous>
[47]     0.2    0.07    0.00                 BeeFishParser::Capture::~Capture() [47]
-----------------------------------------------
                0.02    0.00 1046699/2570515     BeeFishParser::And::read(char) <cycle 3> [17]
                0.04    0.00 1523816/2570515     BeeFishParser::Repeat::read(char) <cycle 3> [3]
[48]     0.1    0.06    0.00 2570515         BeeFishParser::Parser::isOptional() const [48]
-----------------------------------------------
                             2705129             BeeFishParser::Or::read(char) <cycle 3> [22]
[49]     0.1    0.05    0.01 2705129         BeeFishParser::Not::read(char) <cycle 3> [49]
                0.01    0.00 2705129/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
                             2705129             BeeFishParser::Or::read(char) <cycle 3> [22]
-----------------------------------------------
                0.04    0.00 1774471/1774471     BeeFishParser::Or::read(char) <cycle 3> [22]
[50]     0.1    0.04    0.00 1774471         BeeFishParser::Word::read(char) [50]
                0.00    0.00 1352196/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
-----------------------------------------------
                              676097             BeeFishParser::Or::~Or() <cycle 2> [9]
                0.06    0.03  676097/106664136     BeeFishParser::ArrayParser::~ArrayParser() [20]
[51]     0.1    0.03    0.01 1352194         BeeFishJSON::Object::~Object() <cycle 2> [51]
                0.01    0.00 2704388/1335051108     BeeFishParser::UTF8Character::~UTF8Character() [13]
                             4056582             BeeFishParser::Optional::~Optional() <cycle 2> [23]
-----------------------------------------------
                                                 <spontaneous>
[52]     0.1    0.03    0.00                 BeeFishParser::Range::~Range() [52]
-----------------------------------------------
                                                 <spontaneous>
[53]     0.0    0.02    0.00                 BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [53]
                0.00    0.00       1/5083130     BeeFishParser::Not::copy() const <cycle 1> [29]
                0.00    0.00       1/5083130     BeeFishParser::Or::copy() const <cycle 1> [5]
                0.00    0.00       1/5083130     BeeFishParser::And::copy() const <cycle 1> [14]
                0.00    0.00       1/5083130     BeeFishParser::Optional::copy() const <cycle 1> [21]
                0.00    0.00       2/1407328497     frame_dummy [10]
-----------------------------------------------
                                                 <spontaneous>
[54]     0.0    0.02    0.00                 std::_Sp_counted_ptr<BeeFishScript::Object*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [54]
-----------------------------------------------
                0.00    0.00 2422984/10536148     BeeFishParser::UTF8Character::read(char) [31]
                0.02    0.00 8113164/10536148     BeeFishParser::NumberExample() <cycle 1> [4]
[55]     0.0    0.02    0.00 10536148         BeeFishParser::UTF8Character::~UTF8Character() [55]
-----------------------------------------------
                0.01    0.01 1976765/1976765     BeeFishParser::UTF8Character::read(char) [31]
[56]     0.0    0.01    0.01 1976765         BeeFishParser::UTF8Character::read(BeeFishParser::UTF8Character const&) [56]
                0.01    0.00 1976765/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
-----------------------------------------------
                              338048             BeeFishParser::LoadOnDemand::~LoadOnDemand() <cycle 2> [28]
[57]     0.0    0.01    0.00  338048         BeeFishJSON::JSON::~JSON() <cycle 2> [57]
                              338048             BeeFishParser::Or::~Or() <cycle 2> [9]
                              338048             BeeFishParser::Optional::~Optional() <cycle 2> [23]
-----------------------------------------------
                0.01    0.00 2704388/2704388     BeeFishParser::NumberExample() <cycle 1> [4]
[58]     0.0    0.01    0.00 2704388         BeeFishParser::operator-(BeeFishParser::Parser const&) [58]
-----------------------------------------------
                              676097             BeeFishParser::Or::copy() const <cycle 1> [5]
                              676097             BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) <cycle 1> [24]
[59]     0.0    0.01    0.00 1352194         BeeFishJSON::Object::copy() const <cycle 1> [59]
                             1352194             BeeFishParser::NumberExample() <cycle 1> [4]
-----------------------------------------------
                0.01    0.00  446219/446219      BeeFishParser::UTF8Character::read(char) [31]
[60]     0.0    0.01    0.00  446219         BeeFishParser::Range::read(BeeFishParser::UTF8Character const&) [60]
                0.00    0.00  446219/43750719     BeeFishParser::Parser::setResult(std::optional<bool>) [40]
-----------------------------------------------
                                                 <spontaneous>
[61]     0.0    0.01    0.00                 BeeFishScript::Variable::operator=(BeeFishScript::Variable const&) [61]
-----------------------------------------------
                                                 <spontaneous>
[62]     0.0    0.01    0.00                 BeeFishParser::Parser::value[abi:cxx11]() const [62]
-----------------------------------------------
                                                 <spontaneous>
[63]     0.0    0.00    0.00                 BeeFishParser::Repeat::Repeat(BeeFishParser::Parser const&, unsigned long, unsigned long) [63]
                0.00    0.00       3/5083130     BeeFishParser::Or::copy() const <cycle 1> [5]
                0.00    0.00       1/5083130     BeeFishParser::And::copy() const <cycle 1> [14]
                0.00    0.00       1/10587685     BeeFishParser::Range::copy() const [33]
-----------------------------------------------
                                                 <spontaneous>
[64]     0.0    0.00    0.00                 BeeFishParser::Not::~Not() [64]
                0.00    0.00       1/106664136     BeeFishParser::Or::~Or() <cycle 2> [9]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.0    0.00    0.00                 BeeFishParser::Range::Range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [65]
                0.00    0.00       4/1407328497     frame_dummy [10]
-----------------------------------------------
                                                 <spontaneous>
[66]     0.0    0.00    0.00                 BeeFishParser::Word::Word(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [66]
                0.00    0.00       2/1407328497     frame_dummy [10]
-----------------------------------------------
                                                 <spontaneous>
[67]     0.0    0.00    0.00                 BeeFishParser::LoadOnDemand::~LoadOnDemand() [67]
                0.00    0.00       1/63553138     std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [42]
-----------------------------------------------
                0.00    0.00 1337543/1337543     BeeFishParser::And::read(char) <cycle 3> [17]
[75]     0.0    0.00    0.00 1337543         BeeFishParser::Optional::isOptional() const [75]
-----------------------------------------------
                0.00    0.00  338048/338048      BeeFishParser::LoadOnDemand::read(char) <cycle 3> [11]
[76]     0.0    0.00    0.00  338048         std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_invoke(std::_Any_data const&, BeeFishParser::Parser*&&) [76]
-----------------------------------------------
                0.00    0.00  322633/322633      BeeFishParser::And::read(char) <cycle 3> [17]
[77]     0.0    0.00    0.00  322633         BeeFishParser::Repeat::isOptional() const [77]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [177]
[78]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11BeeFishMisc7openLogEv [78]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [177]
[79]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [clone .constprop.0] [79]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [78] _GLOBAL__sub_I__ZN11BeeFishMisc7openLogEv (main.cpp) [15] BeeFishParser::And::~And() [5] BeeFishParser::Or::copy() const
  [79] __static_initialization_and_destruction_0(int, int) [clone .constprop.0] (main.cpp) [8] BeeFishParser::And::~And() [14] BeeFishParser::And::copy() const
  [35] BeeFishJSON::JSON::read(char) [49] BeeFishParser::Not::read(char) [29] BeeFishParser::Not::copy() const
  [57] BeeFishJSON::JSON::~JSON() [27] BeeFishParser::Not::~Not() [37] BeeFishParser::Word::copy() const
  [12] BeeFishJSON::_JSON(BeeFishParser::Parser*) [50] BeeFishParser::Word::read(char) [33] BeeFishParser::Range::copy() const
  [43] BeeFishJSON::Object::read(char) [41] BeeFishParser::Word::~Word() [48] BeeFishParser::Parser::isOptional() const
  [51] BeeFishJSON::Object::~Object() [60] BeeFishParser::Range::read(BeeFishParser::UTF8Character const&) [62] BeeFishParser::Parser::value[abi:cxx11]() const
  [53] BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::Parser const&, BeeFishParser::Parser const&) [46] BeeFishParser::Range::~Range() [77] BeeFishParser::Repeat::isOptional() const
  [24] BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::Parser const&) [52] BeeFishParser::Range::~Range() [18] BeeFishParser::Repeat::copy() const
  [30] BeeFishParser::ArrayParser::ArrayParser(BeeFishParser::ArrayParser const&, BeeFishParser::ArrayParser const&) [40] BeeFishParser::Parser::setResult(std::optional<bool>) [75] BeeFishParser::Optional::isOptional() const
  [20] BeeFishParser::ArrayParser::~ArrayParser() [3] BeeFishParser::Repeat::read(char) [21] BeeFishParser::Optional::copy() const
  [11] BeeFishParser::LoadOnDemand::read(char) [19] BeeFishParser::Repeat::~Repeat() [38] BeeFishScript::Variable::operator==(char const*) const
  [28] BeeFishParser::LoadOnDemand::~LoadOnDemand() [32] BeeFishParser::Repeat::~Repeat() [39] BeeFishScript::Variable::operator==(BeeFishScript::Variable const&) const
   [4] BeeFishParser::NumberExample() [25] BeeFishParser::Capture::read(char) [54] std::_Sp_counted_ptr<BeeFishScript::Object*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  [56] BeeFishParser::UTF8Character::read(BeeFishParser::UTF8Character const&) [47] BeeFishParser::Capture::~Capture() [42] std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  [31] BeeFishParser::UTF8Character::read(char) [34] BeeFishParser::Optional::read(char) [76] std::_Function_handler<BeeFishParser::Parser* (BeeFishParser::Parser*), BeeFishParser::Parser* (*)(BeeFishParser::Parser*)>::_M_invoke(std::_Any_data const&, BeeFishParser::Parser*&&)
  [44] BeeFishParser::UTF8Character::UTF8Character(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [23] BeeFishParser::Optional::~Optional() [16] std::vector<BeeFishParser::Parser*, std::allocator<BeeFishParser::Parser*> >::reserve(unsigned long)
  [13] BeeFishParser::UTF8Character::~UTF8Character() [58] BeeFishParser::operator-(BeeFishParser::Parser const&) [10] frame_dummy
  [55] BeeFishParser::UTF8Character::~UTF8Character() [45] BeeFishParser::operator||(BeeFishParser::Or const&, BeeFishParser::Parser const&) [2] <cycle 1>
  [22] BeeFishParser::Or::read(char) [61] BeeFishScript::Variable::operator=(BeeFishScript::Variable const&) [6] <cycle 2>
   [9] BeeFishParser::Or::~Or() [59] BeeFishJSON::Object::copy() const (1) <cycle 3>
  [36] BeeFishParser::Or::~Or() [26] BeeFishParser::LoadOnDemand::copy() const
  [17] BeeFishParser::And::read(char) [7] BeeFishParser::UTF8Character::copy() const
